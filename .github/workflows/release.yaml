name: Production Release

on:
  push:
    branches:
      - main

jobs:
  release-production:
    name: Build and Release Production
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Version
        id: version
        uses: starburst997/auto-version@v1
        with:
          update-major-minor: true

      - name: Build and Push Docker
        uses: starburst997/docker-helm-push@v1
        with:
          version: ${{ steps.version.outputs.tag }}

      - name: Update action.yml with new version
        run: |
          # Update the docker image version in action.yml using repository name
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          sed -i "s|${REPO_NAME}:[^\"]*|${REPO_NAME}:${{ steps.version.outputs.tag }}|g" action.yml

          # Check if file was actually changed
          if git diff --quiet action.yml; then
            echo "No changes to action.yml"
            exit 0
          fi

          # Configure git for github-actions[bot]
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Commit the change
          git add action.yml
          git commit -m "chore: update docker image to ${{ steps.version.outputs.tag }}"
          git push

      - name: Generate changelog and create release
        uses: starburst997/commits-logs@v1
